<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qudian.pay.ares.dao.mapper.local.TaskInfoMapper">
    <resultMap id="BaseResultMap" type="com.qudian.pay.ares.dao.entity.local.TaskInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="pay_loan_capital" property="payLoanCapital" jdbcType="DECIMAL"/>
        <result column="pay_loan_interst" property="payLoanInterst" jdbcType="DECIMAL"/>
        <result column="pay_borrow_interst" property="payBorrowInterst" jdbcType="DECIMAL"/>
        <result column="order_num" property="orderNum" jdbcType="INTEGER"/>
        <result column="bill_items_num" property="billItemsNum" jdbcType="INTEGER"/>
        <result column="task_status" property="taskStatus" jdbcType="INTEGER"/>
        <result column="task_type" property="taskType" jdbcType="INTEGER"/>
        <result column="task_name" property="taskName" jdbcType="VARCHAR"/>
        <result column="file_path" property="filePath" jdbcType="VARCHAR"/>
        <result column="file_name" property="fileName" jdbcType="VARCHAR"/>
        <result column="repair_date" property="repairDate" jdbcType="DATE"/>
        <result column="error_msg" property="errorMsg" jdbcType="VARCHAR"/>
        <result column="error_detailed_msg" property="errorDetailedMsg" jdbcType="VARCHAR"/>
        <result column="ext1" property="ext1" jdbcType="VARCHAR"/>
        <result column="ext2" property="ext2" jdbcType="VARCHAR"/>
        <result column="ext3" property="ext3" jdbcType="VARCHAR"/>
        <result column="ext4" property="ext4" jdbcType="VARCHAR"/>
        <result column="create_Time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="operate_user" property="operateUser" jdbcType="VARCHAR"/>
        <result column="operate_user_id" property="operateUserId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, pay_loan_capital, pay_loan_interst, pay_borrow_interst, order_num, bill_items_num,
        task_status, task_type, task_name, file_path, file_name, repair_date, error_msg,
        error_detailed_msg, ext1, ext2, ext3, ext4, create_Time, update_time, operate_user,
        operate_user_id
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.qudian.pay.ares.dao.entity.local.TaskInfoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from task_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from task_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from task_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.qudian.pay.ares.dao.entity.local.TaskInfoExample">
        delete from task_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.qudian.pay.ares.dao.entity.local.TaskInfo">
        insert into task_info (id, pay_loan_capital, pay_loan_interst,
        pay_borrow_interst, order_num, bill_items_num,
        task_status, task_type, task_name,
        file_path, file_name, repair_date,
        error_msg, error_detailed_msg, ext1,
        ext2, ext3, ext4, create_Time,
        update_time, operate_user, operate_user_id
        )
        values (#{id,jdbcType=INTEGER}, #{payLoanCapital,jdbcType=DECIMAL}, #{payLoanInterst,jdbcType=DECIMAL},
        #{payBorrowInterst,jdbcType=DECIMAL}, #{orderNum,jdbcType=INTEGER}, #{billItemsNum,jdbcType=INTEGER},
        #{taskStatus,jdbcType=INTEGER}, #{taskType,jdbcType=INTEGER}, #{taskName,jdbcType=VARCHAR},
        #{filePath,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{repairDate,jdbcType=DATE},
        #{errorMsg,jdbcType=VARCHAR}, #{errorDetailedMsg,jdbcType=VARCHAR}, #{ext1,jdbcType=VARCHAR},
        #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR}, #{ext4,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{operateUser,jdbcType=VARCHAR}, #{operateUserId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.qudian.pay.ares.dao.entity.local.TaskInfo">
        insert into task_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="payLoanCapital != null">
                pay_loan_capital,
            </if>
            <if test="payLoanInterst != null">
                pay_loan_interst,
            </if>
            <if test="payBorrowInterst != null">
                pay_borrow_interst,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="billItemsNum != null">
                bill_items_num,
            </if>
            <if test="taskStatus != null">
                task_status,
            </if>
            <if test="taskType != null">
                task_type,
            </if>
            <if test="taskName != null">
                task_name,
            </if>
            <if test="filePath != null">
                file_path,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="repairDate != null">
                repair_date,
            </if>
            <if test="errorMsg != null">
                error_msg,
            </if>
            <if test="errorDetailedMsg != null">
                error_detailed_msg,
            </if>
            <if test="ext1 != null">
                ext1,
            </if>
            <if test="ext2 != null">
                ext2,
            </if>
            <if test="ext3 != null">
                ext3,
            </if>
            <if test="ext4 != null">
                ext4,
            </if>
            <if test="createTime != null">
                create_Time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="operateUser != null">
                operate_user,
            </if>
            <if test="operateUserId != null">
                operate_user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="payLoanCapital != null">
                #{payLoanCapital,jdbcType=DECIMAL},
            </if>
            <if test="payLoanInterst != null">
                #{payLoanInterst,jdbcType=DECIMAL},
            </if>
            <if test="payBorrowInterst != null">
                #{payBorrowInterst,jdbcType=DECIMAL},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="billItemsNum != null">
                #{billItemsNum,jdbcType=INTEGER},
            </if>
            <if test="taskStatus != null">
                #{taskStatus,jdbcType=INTEGER},
            </if>
            <if test="taskType != null">
                #{taskType,jdbcType=INTEGER},
            </if>
            <if test="taskName != null">
                #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="filePath != null">
                #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="repairDate != null">
                #{repairDate,jdbcType=DATE},
            </if>
            <if test="errorMsg != null">
                #{errorMsg,jdbcType=VARCHAR},
            </if>
            <if test="errorDetailedMsg != null">
                #{errorDetailedMsg,jdbcType=VARCHAR},
            </if>
            <if test="ext1 != null">
                #{ext1,jdbcType=VARCHAR},
            </if>
            <if test="ext2 != null">
                #{ext2,jdbcType=VARCHAR},
            </if>
            <if test="ext3 != null">
                #{ext3,jdbcType=VARCHAR},
            </if>
            <if test="ext4 != null">
                #{ext4,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateUser != null">
                #{operateUser,jdbcType=VARCHAR},
            </if>
            <if test="operateUserId != null">
                #{operateUserId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.qudian.pay.ares.dao.entity.local.TaskInfoExample"
            resultType="java.lang.Integer">
        select count(*) from task_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update task_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.payLoanCapital != null">
                pay_loan_capital = #{record.payLoanCapital,jdbcType=DECIMAL},
            </if>
            <if test="record.payLoanInterst != null">
                pay_loan_interst = #{record.payLoanInterst,jdbcType=DECIMAL},
            </if>
            <if test="record.payBorrowInterst != null">
                pay_borrow_interst = #{record.payBorrowInterst,jdbcType=DECIMAL},
            </if>
            <if test="record.orderNum != null">
                order_num = #{record.orderNum,jdbcType=INTEGER},
            </if>
            <if test="record.billItemsNum != null">
                bill_items_num = #{record.billItemsNum,jdbcType=INTEGER},
            </if>
            <if test="record.taskStatus != null">
                task_status = #{record.taskStatus,jdbcType=INTEGER},
            </if>
            <if test="record.taskType != null">
                task_type = #{record.taskType,jdbcType=INTEGER},
            </if>
            <if test="record.taskName != null">
                task_name = #{record.taskName,jdbcType=VARCHAR},
            </if>
            <if test="record.filePath != null">
                file_path = #{record.filePath,jdbcType=VARCHAR},
            </if>
            <if test="record.fileName != null">
                file_name = #{record.fileName,jdbcType=VARCHAR},
            </if>
            <if test="record.repairDate != null">
                repair_date = #{record.repairDate,jdbcType=DATE},
            </if>
            <if test="record.errorMsg != null">
                error_msg = #{record.errorMsg,jdbcType=VARCHAR},
            </if>
            <if test="record.errorDetailedMsg != null">
                error_detailed_msg = #{record.errorDetailedMsg,jdbcType=VARCHAR},
            </if>
            <if test="record.ext1 != null">
                ext1 = #{record.ext1,jdbcType=VARCHAR},
            </if>
            <if test="record.ext2 != null">
                ext2 = #{record.ext2,jdbcType=VARCHAR},
            </if>
            <if test="record.ext3 != null">
                ext3 = #{record.ext3,jdbcType=VARCHAR},
            </if>
            <if test="record.ext4 != null">
                ext4 = #{record.ext4,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_Time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.operateUser != null">
                operate_user = #{record.operateUser,jdbcType=VARCHAR},
            </if>
            <if test="record.operateUserId != null">
                operate_user_id = #{record.operateUserId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update task_info
        set id = #{record.id,jdbcType=INTEGER},
        pay_loan_capital = #{record.payLoanCapital,jdbcType=DECIMAL},
        pay_loan_interst = #{record.payLoanInterst,jdbcType=DECIMAL},
        pay_borrow_interst = #{record.payBorrowInterst,jdbcType=DECIMAL},
        order_num = #{record.orderNum,jdbcType=INTEGER},
        bill_items_num = #{record.billItemsNum,jdbcType=INTEGER},
        task_status = #{record.taskStatus,jdbcType=INTEGER},
        task_type = #{record.taskType,jdbcType=INTEGER},
        task_name = #{record.taskName,jdbcType=VARCHAR},
        file_path = #{record.filePath,jdbcType=VARCHAR},
        file_name = #{record.fileName,jdbcType=VARCHAR},
        repair_date = #{record.repairDate,jdbcType=DATE},
        error_msg = #{record.errorMsg,jdbcType=VARCHAR},
        error_detailed_msg = #{record.errorDetailedMsg,jdbcType=VARCHAR},
        ext1 = #{record.ext1,jdbcType=VARCHAR},
        ext2 = #{record.ext2,jdbcType=VARCHAR},
        ext3 = #{record.ext3,jdbcType=VARCHAR},
        ext4 = #{record.ext4,jdbcType=VARCHAR},
        create_Time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        operate_user = #{record.operateUser,jdbcType=VARCHAR},
        operate_user_id = #{record.operateUserId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.qudian.pay.ares.dao.entity.local.TaskInfo">
        update task_info
        <set>
            <if test="payLoanCapital != null">
                pay_loan_capital = #{payLoanCapital,jdbcType=DECIMAL},
            </if>
            <if test="payLoanInterst != null">
                pay_loan_interst = #{payLoanInterst,jdbcType=DECIMAL},
            </if>
            <if test="payBorrowInterst != null">
                pay_borrow_interst = #{payBorrowInterst,jdbcType=DECIMAL},
            </if>
            <if test="orderNum != null">
                order_num = #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="billItemsNum != null">
                bill_items_num = #{billItemsNum,jdbcType=INTEGER},
            </if>
            <if test="taskStatus != null">
                task_status = #{taskStatus,jdbcType=INTEGER},
            </if>
            <if test="taskType != null">
                task_type = #{taskType,jdbcType=INTEGER},
            </if>
            <if test="taskName != null">
                task_name = #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="filePath != null">
                file_path = #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="repairDate != null">
                repair_date = #{repairDate,jdbcType=DATE},
            </if>
            <if test="errorMsg != null">
                error_msg = #{errorMsg,jdbcType=VARCHAR},
            </if>
            <if test="errorDetailedMsg != null">
                error_detailed_msg = #{errorDetailedMsg,jdbcType=VARCHAR},
            </if>
            <if test="ext1 != null">
                ext1 = #{ext1,jdbcType=VARCHAR},
            </if>
            <if test="ext2 != null">
                ext2 = #{ext2,jdbcType=VARCHAR},
            </if>
            <if test="ext3 != null">
                ext3 = #{ext3,jdbcType=VARCHAR},
            </if>
            <if test="ext4 != null">
                ext4 = #{ext4,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_Time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateUser != null">
                operate_user = #{operateUser,jdbcType=VARCHAR},
            </if>
            <if test="operateUserId != null">
                operate_user_id = #{operateUserId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.qudian.pay.ares.dao.entity.local.TaskInfo">
        update task_info
        set pay_loan_capital = #{payLoanCapital,jdbcType=DECIMAL},
        pay_loan_interst = #{payLoanInterst,jdbcType=DECIMAL},
        pay_borrow_interst = #{payBorrowInterst,jdbcType=DECIMAL},
        order_num = #{orderNum,jdbcType=INTEGER},
        bill_items_num = #{billItemsNum,jdbcType=INTEGER},
        task_status = #{taskStatus,jdbcType=INTEGER},
        task_type = #{taskType,jdbcType=INTEGER},
        task_name = #{taskName,jdbcType=VARCHAR},
        file_path = #{filePath,jdbcType=VARCHAR},
        file_name = #{fileName,jdbcType=VARCHAR},
        repair_date = #{repairDate,jdbcType=DATE},
        error_msg = #{errorMsg,jdbcType=VARCHAR},
        error_detailed_msg = #{errorDetailedMsg,jdbcType=VARCHAR},
        ext1 = #{ext1,jdbcType=VARCHAR},
        ext2 = #{ext2,jdbcType=VARCHAR},
        ext3 = #{ext3,jdbcType=VARCHAR},
        ext4 = #{ext4,jdbcType=VARCHAR},
        create_Time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        operate_user = #{operateUser,jdbcType=VARCHAR},
        operate_user_id = #{operateUserId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--#########################自定义sql #########################-->
    <select id="selectByExampleByPage" resultMap="BaseResultMap"
            parameterType="com.qudian.pay.ares.dao.entity.local.TaskInfoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from task_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startLimit != null">
            limit ${startLimit},${pageSize}
        </if>
    </select>

    <insert id="insertReturnPK" parameterType="com.qudian.pay.ares.dao.entity.local.TaskInfo">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into task_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="payLoanCapital != null">
                pay_loan_capital,
            </if>
            <if test="payLoanInterst != null">
                pay_loan_interst,
            </if>
            <if test="payBorrowInterst != null">
                pay_borrow_interst,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="billItemsNum != null">
                bill_items_num,
            </if>
            <if test="taskStatus != null">
                task_status,
            </if>
            <if test="taskType != null">
                task_type,
            </if>
            <if test="taskName != null">
                task_name,
            </if>
            <if test="filePath != null">
                file_path,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="repairDate != null">
                repair_date,
            </if>
            <if test="errorMsg != null">
                error_msg,
            </if>
            <if test="errorDetailedMsg != null">
                error_detailed_msg,
            </if>
            <if test="ext1 != null">
                ext1,
            </if>
            <if test="ext2 != null">
                ext2,
            </if>
            <if test="ext3 != null">
                ext3,
            </if>
            <if test="ext4 != null">
                ext4,
            </if>
            <if test="createTime != null">
                create_Time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="operateUser != null">
                operate_user,
            </if>
            <if test="operateUserId != null">
                operate_user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="payLoanCapital != null">
                #{payLoanCapital,jdbcType=DECIMAL},
            </if>
            <if test="payLoanInterst != null">
                #{payLoanInterst,jdbcType=DECIMAL},
            </if>
            <if test="payBorrowInterst != null">
                #{payBorrowInterst,jdbcType=DECIMAL},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="billItemsNum != null">
                #{billItemsNum,jdbcType=INTEGER},
            </if>
            <if test="taskStatus != null">
                #{taskStatus,jdbcType=INTEGER},
            </if>
            <if test="taskType != null">
                #{taskType,jdbcType=INTEGER},
            </if>
            <if test="taskName != null">
                #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="filePath != null">
                #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="repairDate != null">
                #{repairDate,jdbcType=DATE},
            </if>
            <if test="errorMsg != null">
                #{errorMsg,jdbcType=VARCHAR},
            </if>
            <if test="errorDetailedMsg != null">
                #{errorDetailedMsg,jdbcType=VARCHAR},
            </if>
            <if test="ext1 != null">
                #{ext1,jdbcType=VARCHAR},
            </if>
            <if test="ext2 != null">
                #{ext2,jdbcType=VARCHAR},
            </if>
            <if test="ext3 != null">
                #{ext3,jdbcType=VARCHAR},
            </if>
            <if test="ext4 != null">
                #{ext4,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateUser != null">
                #{operateUser,jdbcType=VARCHAR},
            </if>
            <if test="operateUserId != null">
                #{operateUserId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


    <update id="updateAddById" parameterType="hashmap">
        update task_info
        set pay_loan_capital = pay_loan_capital+#{payLoanCapital,jdbcType=DECIMAL},pay_loan_interst = pay_loan_interst+#{payLoanInterst,jdbcType=DECIMAL},pay_borrow_interst = pay_borrow_interst+#{payBorrowInterst,jdbcType=DECIMAL},bill_items_num =bill_items_num+#{billItemsNum,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="get" resultType="java.util.Map">
        select * FROM task_info WHERE id =5
    </select>

</mapper>