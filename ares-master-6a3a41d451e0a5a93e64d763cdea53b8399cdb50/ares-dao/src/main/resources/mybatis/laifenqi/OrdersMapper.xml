<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qudian.pay.ares.dao.mapper.laifenqi.OrdersMapper">
    <resultMap id="BaseResultMap" type="com.qudian.pay.ares.dao.entity.laifenqi.Orders">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="province_id" property="provinceId" jdbcType="INTEGER"/>
        <result column="city_id" property="cityId" jdbcType="INTEGER"/>
        <result column="area_id" property="areaId" jdbcType="INTEGER"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="new_address" property="newAddress" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="rate" property="rate" jdbcType="DECIMAL"/>
        <result column="activity_rate" property="activityRate" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="total_amount" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="tip_amount" property="tipAmount" jdbcType="DECIMAL"/>
        <result column="down_payment" property="downPayment" jdbcType="DECIMAL"/>
        <result column="fenqi" property="fenqi" jdbcType="INTEGER"/>
        <result column="per_amount" property="perAmount" jdbcType="DECIMAL"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="channel" property="channel" jdbcType="VARCHAR"/>
        <result column="rate_config_id" property="rateConfigId" jdbcType="TINYINT"/>
        <result column="orign_amount" property="orignAmount" jdbcType="DECIMAL"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="cancel_at" property="cancelAt" jdbcType="TIMESTAMP"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP"/>
        <result column="fenqi_cycle" property="fenqiCycle" jdbcType="TINYINT"/>
        <result column="pay_area" property="payArea" jdbcType="INTEGER"/>
        <result column="loan_area" property="loanArea" jdbcType="INTEGER"/>
        <result column="share_benefit" property="shareBenefit" jdbcType="INTEGER"/>
        <result column="company_rate" property="companyRate" jdbcType="DECIMAL"/>
        <result column="trade_type" property="tradeType" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, order_no, user_id, province_id, city_id, area_id, address, new_address, mobile,
    name, rate, activity_rate, status, total_amount, tip_amount, down_payment, fenqi,
    per_amount, type, channel, rate_config_id, orign_amount, remark, cancel_at, created_at,
    updated_at, deleted_at, fenqi_cycle, pay_area, loan_area, share_benefit, company_rate,
    trade_type
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.qudian.pay.ares.dao.entity.laifenqi.OrdersExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>

    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from orders
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.OrdersExample">
        delete from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.Orders">
    insert into orders (id, order_no, user_id,
    province_id, city_id, area_id,
    address, new_address, mobile,
    name, rate, activity_rate,
    status, total_amount, tip_amount,
    down_payment, fenqi, per_amount,
    type, channel, rate_config_id,
    orign_amount, remark, cancel_at,
    created_at, updated_at, deleted_at,
    fenqi_cycle, pay_area, loan_area,
    share_benefit, company_rate, trade_type
    )
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
    #{provinceId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER},
    #{address,jdbcType=VARCHAR}, #{newAddress,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
    #{name,jdbcType=VARCHAR}, #{rate,jdbcType=DECIMAL}, #{activityRate,jdbcType=DECIMAL},
    #{status,jdbcType=INTEGER}, #{totalAmount,jdbcType=DECIMAL}, #{tipAmount,jdbcType=DECIMAL},
    #{downPayment,jdbcType=DECIMAL}, #{fenqi,jdbcType=INTEGER}, #{perAmount,jdbcType=DECIMAL},
    #{type,jdbcType=TINYINT}, #{channel,jdbcType=VARCHAR}, #{rateConfigId,jdbcType=TINYINT},
    #{orignAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{cancelAt,jdbcType=TIMESTAMP},
    #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP},
    #{fenqiCycle,jdbcType=TINYINT}, #{payArea,jdbcType=INTEGER}, #{loanArea,jdbcType=INTEGER},
    #{shareBenefit,jdbcType=INTEGER}, #{companyRate,jdbcType=DECIMAL}, #{tradeType,jdbcType=TINYINT}
    )
  </insert>
    <insert id="insertSelective" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.Orders">
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="provinceId != null">
                province_id,
            </if>
            <if test="cityId != null">
                city_id,
            </if>
            <if test="areaId != null">
                area_id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="newAddress != null">
                new_address,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="rate != null">
                rate,
            </if>
            <if test="activityRate != null">
                activity_rate,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="tipAmount != null">
                tip_amount,
            </if>
            <if test="downPayment != null">
                down_payment,
            </if>
            <if test="fenqi != null">
                fenqi,
            </if>
            <if test="perAmount != null">
                per_amount,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="channel != null">
                channel,
            </if>
            <if test="rateConfigId != null">
                rate_config_id,
            </if>
            <if test="orignAmount != null">
                orign_amount,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="cancelAt != null">
                cancel_at,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="deletedAt != null">
                deleted_at,
            </if>
            <if test="fenqiCycle != null">
                fenqi_cycle,
            </if>
            <if test="payArea != null">
                pay_area,
            </if>
            <if test="loanArea != null">
                loan_area,
            </if>
            <if test="shareBenefit != null">
                share_benefit,
            </if>
            <if test="companyRate != null">
                company_rate,
            </if>
            <if test="tradeType != null">
                trade_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="provinceId != null">
                #{provinceId,jdbcType=INTEGER},
            </if>
            <if test="cityId != null">
                #{cityId,jdbcType=INTEGER},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="newAddress != null">
                #{newAddress,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="rate != null">
                #{rate,jdbcType=DECIMAL},
            </if>
            <if test="activityRate != null">
                #{activityRate,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="tipAmount != null">
                #{tipAmount,jdbcType=DECIMAL},
            </if>
            <if test="downPayment != null">
                #{downPayment,jdbcType=DECIMAL},
            </if>
            <if test="fenqi != null">
                #{fenqi,jdbcType=INTEGER},
            </if>
            <if test="perAmount != null">
                #{perAmount,jdbcType=DECIMAL},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="channel != null">
                #{channel,jdbcType=VARCHAR},
            </if>
            <if test="rateConfigId != null">
                #{rateConfigId,jdbcType=TINYINT},
            </if>
            <if test="orignAmount != null">
                #{orignAmount,jdbcType=DECIMAL},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="cancelAt != null">
                #{cancelAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedAt != null">
                #{deletedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="fenqiCycle != null">
                #{fenqiCycle,jdbcType=TINYINT},
            </if>
            <if test="payArea != null">
                #{payArea,jdbcType=INTEGER},
            </if>
            <if test="loanArea != null">
                #{loanArea,jdbcType=INTEGER},
            </if>
            <if test="shareBenefit != null">
                #{shareBenefit,jdbcType=INTEGER},
            </if>
            <if test="companyRate != null">
                #{companyRate,jdbcType=DECIMAL},
            </if>
            <if test="tradeType != null">
                #{tradeType,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.OrdersExample"
            resultType="java.lang.Integer">
        select count(*) from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update orders
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.provinceId != null">
                province_id = #{record.provinceId,jdbcType=INTEGER},
            </if>
            <if test="record.cityId != null">
                city_id = #{record.cityId,jdbcType=INTEGER},
            </if>
            <if test="record.areaId != null">
                area_id = #{record.areaId,jdbcType=INTEGER},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.newAddress != null">
                new_address = #{record.newAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.mobile != null">
                mobile = #{record.mobile,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.rate != null">
                rate = #{record.rate,jdbcType=DECIMAL},
            </if>
            <if test="record.activityRate != null">
                activity_rate = #{record.activityRate,jdbcType=DECIMAL},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.totalAmount != null">
                total_amount = #{record.totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.tipAmount != null">
                tip_amount = #{record.tipAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.downPayment != null">
                down_payment = #{record.downPayment,jdbcType=DECIMAL},
            </if>
            <if test="record.fenqi != null">
                fenqi = #{record.fenqi,jdbcType=INTEGER},
            </if>
            <if test="record.perAmount != null">
                per_amount = #{record.perAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.channel != null">
                channel = #{record.channel,jdbcType=VARCHAR},
            </if>
            <if test="record.rateConfigId != null">
                rate_config_id = #{record.rateConfigId,jdbcType=TINYINT},
            </if>
            <if test="record.orignAmount != null">
                orign_amount = #{record.orignAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.cancelAt != null">
                cancel_at = #{record.cancelAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null">
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deletedAt != null">
                deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.fenqiCycle != null">
                fenqi_cycle = #{record.fenqiCycle,jdbcType=TINYINT},
            </if>
            <if test="record.payArea != null">
                pay_area = #{record.payArea,jdbcType=INTEGER},
            </if>
            <if test="record.loanArea != null">
                loan_area = #{record.loanArea,jdbcType=INTEGER},
            </if>
            <if test="record.shareBenefit != null">
                share_benefit = #{record.shareBenefit,jdbcType=INTEGER},
            </if>
            <if test="record.companyRate != null">
                company_rate = #{record.companyRate,jdbcType=DECIMAL},
            </if>
            <if test="record.tradeType != null">
                trade_type = #{record.tradeType,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update orders
        set id = #{record.id,jdbcType=INTEGER},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=INTEGER},
        province_id = #{record.provinceId,jdbcType=INTEGER},
        city_id = #{record.cityId,jdbcType=INTEGER},
        area_id = #{record.areaId,jdbcType=INTEGER},
        address = #{record.address,jdbcType=VARCHAR},
        new_address = #{record.newAddress,jdbcType=VARCHAR},
        mobile = #{record.mobile,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        rate = #{record.rate,jdbcType=DECIMAL},
        activity_rate = #{record.activityRate,jdbcType=DECIMAL},
        status = #{record.status,jdbcType=INTEGER},
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
        tip_amount = #{record.tipAmount,jdbcType=DECIMAL},
        down_payment = #{record.downPayment,jdbcType=DECIMAL},
        fenqi = #{record.fenqi,jdbcType=INTEGER},
        per_amount = #{record.perAmount,jdbcType=DECIMAL},
        type = #{record.type,jdbcType=TINYINT},
        channel = #{record.channel,jdbcType=VARCHAR},
        rate_config_id = #{record.rateConfigId,jdbcType=TINYINT},
        orign_amount = #{record.orignAmount,jdbcType=DECIMAL},
        remark = #{record.remark,jdbcType=VARCHAR},
        cancel_at = #{record.cancelAt,jdbcType=TIMESTAMP},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
        fenqi_cycle = #{record.fenqiCycle,jdbcType=TINYINT},
        pay_area = #{record.payArea,jdbcType=INTEGER},
        loan_area = #{record.loanArea,jdbcType=INTEGER},
        share_benefit = #{record.shareBenefit,jdbcType=INTEGER},
        company_rate = #{record.companyRate,jdbcType=DECIMAL},
        trade_type = #{record.tradeType,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.Orders">
        update orders
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="provinceId != null">
                province_id = #{provinceId,jdbcType=INTEGER},
            </if>
            <if test="cityId != null">
                city_id = #{cityId,jdbcType=INTEGER},
            </if>
            <if test="areaId != null">
                area_id = #{areaId,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="newAddress != null">
                new_address = #{newAddress,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="rate != null">
                rate = #{rate,jdbcType=DECIMAL},
            </if>
            <if test="activityRate != null">
                activity_rate = #{activityRate,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="tipAmount != null">
                tip_amount = #{tipAmount,jdbcType=DECIMAL},
            </if>
            <if test="downPayment != null">
                down_payment = #{downPayment,jdbcType=DECIMAL},
            </if>
            <if test="fenqi != null">
                fenqi = #{fenqi,jdbcType=INTEGER},
            </if>
            <if test="perAmount != null">
                per_amount = #{perAmount,jdbcType=DECIMAL},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="channel != null">
                channel = #{channel,jdbcType=VARCHAR},
            </if>
            <if test="rateConfigId != null">
                rate_config_id = #{rateConfigId,jdbcType=TINYINT},
            </if>
            <if test="orignAmount != null">
                orign_amount = #{orignAmount,jdbcType=DECIMAL},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="cancelAt != null">
                cancel_at = #{cancelAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedAt != null">
                deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="fenqiCycle != null">
                fenqi_cycle = #{fenqiCycle,jdbcType=TINYINT},
            </if>
            <if test="payArea != null">
                pay_area = #{payArea,jdbcType=INTEGER},
            </if>
            <if test="loanArea != null">
                loan_area = #{loanArea,jdbcType=INTEGER},
            </if>
            <if test="shareBenefit != null">
                share_benefit = #{shareBenefit,jdbcType=INTEGER},
            </if>
            <if test="companyRate != null">
                company_rate = #{companyRate,jdbcType=DECIMAL},
            </if>
            <if test="tradeType != null">
                trade_type = #{tradeType,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.Orders">
    update orders
    set order_no = #{orderNo,jdbcType=VARCHAR},
    user_id = #{userId,jdbcType=INTEGER},
    province_id = #{provinceId,jdbcType=INTEGER},
    city_id = #{cityId,jdbcType=INTEGER},
    area_id = #{areaId,jdbcType=INTEGER},
    address = #{address,jdbcType=VARCHAR},
    new_address = #{newAddress,jdbcType=VARCHAR},
    mobile = #{mobile,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    rate = #{rate,jdbcType=DECIMAL},
    activity_rate = #{activityRate,jdbcType=DECIMAL},
    status = #{status,jdbcType=INTEGER},
    total_amount = #{totalAmount,jdbcType=DECIMAL},
    tip_amount = #{tipAmount,jdbcType=DECIMAL},
    down_payment = #{downPayment,jdbcType=DECIMAL},
    fenqi = #{fenqi,jdbcType=INTEGER},
    per_amount = #{perAmount,jdbcType=DECIMAL},
    type = #{type,jdbcType=TINYINT},
    channel = #{channel,jdbcType=VARCHAR},
    rate_config_id = #{rateConfigId,jdbcType=TINYINT},
    orign_amount = #{orignAmount,jdbcType=DECIMAL},
    remark = #{remark,jdbcType=VARCHAR},
    cancel_at = #{cancelAt,jdbcType=TIMESTAMP},
    created_at = #{createdAt,jdbcType=TIMESTAMP},
    updated_at = #{updatedAt,jdbcType=TIMESTAMP},
    deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
    fenqi_cycle = #{fenqiCycle,jdbcType=TINYINT},
    pay_area = #{payArea,jdbcType=INTEGER},
    loan_area = #{loanArea,jdbcType=INTEGER},
    share_benefit = #{shareBenefit,jdbcType=INTEGER},
    company_rate = #{companyRate,jdbcType=DECIMAL},
    trade_type = #{tradeType,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByExampleByPage" resultMap="BaseResultMap"
            parameterType="com.qudian.pay.ares.dao.entity.laifenqi.OrdersExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startLimit != null">
            limit ${startLimit},${pageSize}
        </if>
    </select>
</mapper>