<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qudian.pay.ares.dao.mapper.laifenqi.BillItemPaidFlowsMapper" >
  <resultMap id="BaseResultMap" type="com.qudian.pay.ares.dao.entity.laifenqi.BillItemPaidFlows" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bill_item_id" property="billItemId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="pay_account" property="payAccount" jdbcType="VARCHAR" />
    <result column="receipt_account" property="receiptAccount" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="pay_way" property="payWay" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_type" property="userType" jdbcType="TINYINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="related_id" property="relatedId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
    <result column="channel_order_no" property="channelOrderNo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bill_item_id, amount, trade_no, pay_time, pay_account, receipt_account, pay_type, 
    pay_way, order_id, user_type, user_id, status, related_id, remark, created_at, updated_at, 
    deleted_at, channel_order_no
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.BillItemPaidFlowsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bill_item_paid_flows
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bill_item_paid_flows
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bill_item_paid_flows
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.BillItemPaidFlowsExample" >
    delete from bill_item_paid_flows
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.BillItemPaidFlows" >
    insert into bill_item_paid_flows (id, bill_item_id, amount, 
      trade_no, pay_time, pay_account, 
      receipt_account, pay_type, pay_way, 
      order_id, user_type, user_id, 
      status, related_id, remark, 
      created_at, updated_at, deleted_at, 
      channel_order_no)
    values (#{id,jdbcType=INTEGER}, #{billItemId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{tradeNo,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, #{payAccount,jdbcType=VARCHAR}, 
      #{receiptAccount,jdbcType=VARCHAR}, #{payType,jdbcType=TINYINT}, #{payWay,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=INTEGER}, #{userType,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{relatedId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP}, 
      #{channelOrderNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.BillItemPaidFlows" >
    insert into bill_item_paid_flows
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="billItemId != null" >
        bill_item_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="tradeNo != null" >
        trade_no,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="payAccount != null" >
        pay_account,
      </if>
      <if test="receiptAccount != null" >
        receipt_account,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payWay != null" >
        pay_way,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="relatedId != null" >
        related_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="deletedAt != null" >
        deleted_at,
      </if>
      <if test="channelOrderNo != null" >
        channel_order_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="billItemId != null" >
        #{billItemId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAccount != null" >
        #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="receiptAccount != null" >
        #{receiptAccount,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="relatedId != null" >
        #{relatedId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="channelOrderNo != null" >
        #{channelOrderNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.BillItemPaidFlowsExample" resultType="java.lang.Integer" >
    select count(*) from bill_item_paid_flows
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bill_item_paid_flows
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.billItemId != null" >
        bill_item_id = #{record.billItemId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeNo != null" >
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payAccount != null" >
        pay_account = #{record.payAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptAccount != null" >
        receipt_account = #{record.receiptAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.payWay != null" >
        pay_way = #{record.payWay,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.relatedId != null" >
        related_id = #{record.relatedId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedAt != null" >
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.channelOrderNo != null" >
        channel_order_no = #{record.channelOrderNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bill_item_paid_flows
    set id = #{record.id,jdbcType=INTEGER},
      bill_item_id = #{record.billItemId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_account = #{record.payAccount,jdbcType=VARCHAR},
      receipt_account = #{record.receiptAccount,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=TINYINT},
      pay_way = #{record.payWay,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      related_id = #{record.relatedId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      channel_order_no = #{record.channelOrderNo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.BillItemPaidFlows" >
    update bill_item_paid_flows
    <set >
      <if test="billItemId != null" >
        bill_item_id = #{billItemId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="tradeNo != null" >
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAccount != null" >
        pay_account = #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="receiptAccount != null" >
        receipt_account = #{receiptAccount,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="payWay != null" >
        pay_way = #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="relatedId != null" >
        related_id = #{relatedId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="channelOrderNo != null" >
        channel_order_no = #{channelOrderNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qudian.pay.ares.dao.entity.laifenqi.BillItemPaidFlows" >
    update bill_item_paid_flows
    set bill_item_id = #{billItemId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      receipt_account = #{receiptAccount,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=TINYINT},
      pay_way = #{payWay,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      related_id = #{relatedId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      channel_order_no = #{channelOrderNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>